/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Event, EventInterface } from "../../contracts/Event";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "eventManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "priceUnit",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDay",
        type: "uint256",
      },
    ],
    name: "NewEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "approveEventManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "location_",
        type: "string",
      },
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
      {
        internalType: "string",
        name: "image_",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "priceUnit_",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "startDate_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate_",
        type: "uint256",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "getApprovedEventManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "eventID_",
        type: "uint64",
      },
    ],
    name: "viewEventDetails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61166c8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f1578063e26429e01461010f578063f2fde38b1461013f578063f95b33091461015b5761007d565b806324555147146100825780633a08a06d146100b7578063715018a6146100e7575b600080fd5b61009c60048036038101906100979190610fe6565b61018b565b6040516100ae96959493929190611146565b60405180910390f35b6100d160048036038101906100cc9190610ebf565b610527565b6040516100de919061112b565b60405180910390f35b6100ef61057d565b005b6100f9610591565b6040516101069190611110565b60405180910390f35b61012960048036038101906101249190610ee8565b6105ba565b6040516101369190611235565b60405180910390f35b61015960048036038101906101549190610ebf565b610a85565b005b61017560048036038101906101709190610ebf565b610b09565b604051610182919061112b565b60405180910390f35b606080600080600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff168152602001908152602001600020600001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008967ffffffffffffffff168152602001908152602001600020600201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a67ffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b67ffffffffffffffff16815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c67ffffffffffffffff16815260200190815260200160002060050154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d67ffffffffffffffff1681526020019081526020016000206006015485805461040690611409565b80601f016020809104026020016040519081016040528092919081815260200182805461043290611409565b801561047f5780601f106104545761010080835404028352916020019161047f565b820191906000526020600020905b81548152906001019060200180831161046257829003601f168201915b5050505050955084805461049290611409565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90611409565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050505050945095509550955095509550955091939550919395565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610585610c07565b61058f6000610c85565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611215565b60405180910390fd5b600061065b6001610d49565b905088600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000190805190602001906106c4929190610d75565b5087600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600101908051906020019061072c929190610d75565b5086600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002019080519060200190610794929190610d75565b5085600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060030190805190602001906107fc929190610d75565b5033600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206005018190555082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600601819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060070160006101000a81548160ff021916908315150217905550610a2f6001610d57565b7ff3508c8fe142c3a4041cd51ffee8351c9e4ea47b30fbd1dcf41afdace614cd80818a8a8a8a338b8b8b604051610a6e99989796959493929190611250565b60405180910390a180915050979650505050505050565b610a8d610c07565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af4906111b5565b60405180910390fd5b610b0681610c85565b50565b6000610b13610c07565b60001515600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d906111d5565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b610c0f610d6d565b73ffffffffffffffffffffffffffffffffffffffff16610c2d610591565b73ffffffffffffffffffffffffffffffffffffffff1614610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a906111f5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6001816000016000828254019250508190555050565b600033905090565b828054610d8190611409565b90600052602060002090601f016020900481019282610da35760008555610dea565b82601f10610dbc57805160ff1916838001178555610dea565b82800160010185558215610dea579182015b82811115610de9578251825591602001919060010190610dce565b5b509050610df79190610dfb565b5090565b5b80821115610e14576000816000905550600101610dfc565b5090565b6000610e2b610e268461131e565b6112f9565b905082815260208101848484011115610e4357600080fd5b610e4e8482856113c7565b509392505050565b600081359050610e65816115f1565b92915050565b600082601f830112610e7c57600080fd5b8135610e8c848260208601610e18565b91505092915050565b600081359050610ea481611608565b92915050565b600081359050610eb98161161f565b92915050565b600060208284031215610ed157600080fd5b6000610edf84828501610e56565b91505092915050565b600080600080600080600060e0888a031215610f0357600080fd5b600088013567ffffffffffffffff811115610f1d57600080fd5b610f298a828b01610e6b565b975050602088013567ffffffffffffffff811115610f4657600080fd5b610f528a828b01610e6b565b965050604088013567ffffffffffffffff811115610f6f57600080fd5b610f7b8a828b01610e6b565b955050606088013567ffffffffffffffff811115610f9857600080fd5b610fa48a828b01610e6b565b9450506080610fb58a828b01610eaa565b93505060a0610fc68a828b01610e95565b92505060c0610fd78a828b01610e95565b91505092959891949750929550565b600060208284031215610ff857600080fd5b600061100684828501610eaa565b91505092915050565b6110188161136b565b82525050565b6110278161137d565b82525050565b60006110388261134f565b611042818561135a565b93506110528185602086016113d6565b61105b816114ca565b840191505092915050565b600061107360268361135a565b915061107e826114db565b604082019050919050565b600061109660258361135a565b91506110a18261152a565b604082019050919050565b60006110b960208361135a565b91506110c482611579565b602082019050919050565b60006110dc60318361135a565b91506110e7826115a2565b604082019050919050565b6110fb816113a9565b82525050565b61110a816113b3565b82525050565b6000602082019050611125600083018461100f565b92915050565b6000602082019050611140600083018461101e565b92915050565b600060c0820190508181036000830152611160818961102d565b90508181036020830152611174818861102d565b9050611183604083018761100f565b6111906060830186611101565b61119d60808301856110f2565b6111aa60a08301846110f2565b979650505050505050565b600060208201905081810360008301526111ce81611066565b9050919050565b600060208201905081810360008301526111ee81611089565b9050919050565b6000602082019050818103600083015261120e816110ac565b9050919050565b6000602082019050818103600083015261122e816110cf565b9050919050565b600060208201905061124a60008301846110f2565b92915050565b600061012082019050611266600083018c6110f2565b8181036020830152611278818b61102d565b9050818103604083015261128c818a61102d565b905081810360608301526112a0818961102d565b905081810360808301526112b4818861102d565b90506112c360a083018761100f565b6112d060c0830186611101565b6112dd60e08301856110f2565b6112eb6101008301846110f2565b9a9950505050505050505050565b6000611303611314565b905061130f828261143b565b919050565b6000604051905090565b600067ffffffffffffffff8211156113395761133861149b565b5b611342826114ca565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061137682611389565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156113f45780820151818401526020810190506113d9565b83811115611403576000848401525b50505050565b6000600282049050600182168061142157607f821691505b602082108114156114355761143461146c565b5b50919050565b611444826114ca565b810181811067ffffffffffffffff821117156114635761146261149b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4576656e74206d616e6167657220616c726561647920617070726f766564206260008201527f65666f7265000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f6e6c79204576656e74204d616e61676572732061726520616c6c6f7765642060008201527f746f20646f207468697320616374696f6e000000000000000000000000000000602082015250565b6115fa8161136b565b811461160557600080fd5b50565b611611816113a9565b811461161c57600080fd5b50565b611628816113b3565b811461163357600080fd5b5056fea2646970667358221220df596a7b369f721ebc5bfcd28ff99a7a4e891979358d12cd8b254ce3fab4cb3164736f6c63430008040033";

type EventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Event__factory extends ContractFactory {
  constructor(...args: EventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Event> {
    return super.deploy(overrides || {}) as Promise<Event>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Event {
    return super.attach(address) as Event;
  }
  override connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
